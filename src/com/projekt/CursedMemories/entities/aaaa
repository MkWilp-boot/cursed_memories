public static void setTileTo(Tile tile) {
		if(!(tiles[tile.getX()  + (tile.getY() * WIDTH)] instanceof WallTile)) {
			tiles[tile.getX()  + (tile.getY() * WIDTH)].setTexture(tile.getTexture());
			System.out.println("Mudou");
		}
		else {
			System.out.println("Parede");
		}
	}
	
	
public void render(Graphics gfx)
	{
		int xStart = Camera.x / TILE_SIZE;
		int yStart = Camera.y / TILE_SIZE;
		int xFinal = xStart + (Game.WIDTH / TILE_SIZE);
		int yFinal = yStart + (Game.HEIGHT / TILE_SIZE);
		
		for(int x = xStart; x <= xFinal; x++)
		{
			for(int y = yStart; y <= yFinal; y++)
			{
				if(x < 0 || y < 0 || x >= WIDTH || y >= HEIGHT)
				{
					continue;
				}
				Tile tile = tiles[x  + (y * WIDTH)];
				tile.render(gfx);
				coordsToRemove[0] = x;
				coordsToRemove[1] = y;
			}
		}
	}
	
	if(tiles[x1 + (y1 * World.WIDTH)].getTexture() == Tile.TILE_WALL_RIGHT ||
		   tiles[x2 + (y2 * World.WIDTH)].getTexture() == Tile.TILE_WALL_RIGHT ||
		   tiles[x3 + (y3 * World.WIDTH)].getTexture() == Tile.TILE_WALL_RIGHT ||
		   tiles[x4 + (y4 * World.WIDTH)].getTexture() == Tile.TILE_WALL_RIGHT) {
			if(!Game.player.invulnerable) {
				Game.player.isDameged = true;
				Game.player.setLife(Game.player.getLife() - 3);
				Game.player.invulnerable = true;
			}
		}